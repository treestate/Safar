/*!
 * odex v1.3.4
 */
if ("undefined" == typeof jQuery) throw new Error("odex's JavaScript requires jQuery");
! function(a) {
    "odex" in window || (window.odex = {}), "helper" in window.odex || (window.odex.helper = {}), "vars" in window.odex || (window.odex.vars = {}), window.odex.vars.icon = " odex-icon ", window.odex.vars[".icon"] = ".odex-icon", odex.vars.touch = "ontouchstart" in window;
    var b = navigator.userAgent;
    odex.vars.webkit = !!b.match(/AppleWebKit/i), odex.vars.safari = !!b.match(/Safari/i) && !b.match(/Chrome/i), odex.vars.android = odex.vars.safari && !!b.match(/Android/i), odex.vars.ios_safari = !!b.match(/OS ([4-9])(_\d)+ like Mac OS X/i) && !b.match(/CriOS/i), odex.vars.ie = window.navigator.msPointerEnabled || document.all && document.querySelector, odex.vars.old_ie = document.all && !document.addEventListener, odex.vars.very_old_ie = document.all && !document.querySelector, odex.vars.firefox = "MozAppearance" in document.documentElement.style, odex.vars.non_auto_fixed = odex.vars.android || odex.vars.ios_safari
}(),
function(a, b) {
    odex.click_event = odex.vars.touch && a.fn.tap ? "tap" : "click"
}(jQuery), jQuery(function(a) {
        function b() {
            odex.vars.non_auto_fixed && a("body").addClass("mob-safari"), odex.vars.transition = !!a.support.transition.end
        }

        function c() {
            var b = a(".sidebar");
            a.fn.ace_sidebar && b.ace_sidebar(), a.fn.ace_sidebar_scroll && b.ace_sidebar_scroll({
                include_toggle: odex.vars.safari || odex.vars.ios_safari
            }), a.fn.ace_sidebar_hover && b.ace_sidebar_hover({
                sub_hover_delay: 750,
                sub_scroll_style: "no-track scroll-thin scroll-margin scroll-visible"
            })
        }

        function d() {
            if (a.fn.ace_ajax) {
                window.Pace && (window.paceOptions = {
                    ajax: !0,
                    document: !0,
                    eventLag: !1
                });
                var b = {
                    close_active: !0,
                    default_url: "page/index",
                    content_url: function(a) {
                        if (!a.match(/^page\//)) return !1;
                        var b = document.location.pathname;
                        return b.match(/(\/ajax\/)(index\.html)?/) ? b.replace(/(\/ajax\/)(index\.html)?/, "/ajax/content/" + a.replace(/^page\//, "") + ".html") : b + "?" + a.replace(/\//, "=")
                    }
                };
                window.Pace && (b.loading_overlay = "body"), a("[data-ajax-content=true]").ace_ajax(b), a(window).on("error.ace_ajax", function() {
                    a("[data-ajax-content=true]").each(function() {
                        var b = a(this);
                        b.ace_ajax("working") && (window.Pace && Pace.running && Pace.stop(), b.ace_ajax("stopLoading", !0))
                    })
                })
            }
        }

        function e() {
            var b = !!a.fn.ace_scroll;
            b && a(".dropdown-content").ace_scroll({
                reset: !1,
                mouseWheelLock: !0
            }), b && !odex.vars.old_ie && (a(window).on("resize.reset_scroll", function() {
                a(".odex-scroll:not(.scroll-disabled)").not(":hidden").ace_scroll("reset")
            }), b && a(document).on("settings.odex.reset_scroll", function(b, c) {
                "sidebar_collapsed" == c && a(".odex-scroll:not(.scroll-disabled)").not(":hidden").ace_scroll("reset")
            }))
        }

        function f() {
            a(document).on("click.dropdown.pos", '.dropdown-toggle[data-position="auto"]', function() {
                var b = a(this).offset(),
                    c = a(this.parentNode);
                parseInt(b.top + a(this).height()) + 50 > odex.helper.scrollTop() + odex.helper.winHeight() - c.find(".dropdown-menu").eq(0).height() ? c.addClass("dropup") : c.removeClass("dropup")
            })
        }

        function g() {
            a('.odex-nav [class*="icon-animated-"]').closest("a").one("click", function() {
                var b = a(this).find('[class*="icon-animated-"]').eq(0),
                    c = b.attr("class").match(/icon\-animated\-([\d\w]+)/);
                b.removeClass(c[0])
            }), a(document).on("click", ".dropdown-navbar .nav-tabs", function(b) {
                b.stopPropagation();
                var c;
                b.target;
                (c = a(b.target).closest("[data-toggle=tab]")) && c.length > 0 && (c.tab("show"), b.preventDefault(), a(window).triggerHandler("resize.navbar.dropdown"))
            })
        }

        function h() {
            a(".sidebar .nav-list .badge[title],.sidebar .nav-list .badge[title]").each(function() {
                var b = a(this).attr("class").match(/tooltip\-(?:\w+)/);
                b = b ? b[0] : "tooltip-error", a(this).tooltip({
                    placement: function(b, c) {
                        var d = a(c).offset();
                        return parseInt(d.left) < parseInt(document.body.scrollWidth / 2) ? "right" : "left"
                    },
                    container: "body",
                    template: '<div class="tooltip ' + b + '"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>'
                })
            })
        }

        function i() {
            var b = a(".btn-scroll-up");
            if (b.length > 0) {
                var c = !1;
                a(window).on("scroll.scroll_btn", function() {
                    var a = odex.helper.scrollTop(),
                        d = odex.helper.winHeight(),
                        e = document.body.scrollHeight;
                    a > parseInt(d / 4) || a > 0 && e >= d && d + a >= e - 1 ? c || (b.addClass("display"), c = !0) : c && (b.removeClass("display"), c = !1)
                }).triggerHandler("scroll.scroll_btn"), b.on(odex.click_event, function() {
                    var b = Math.min(500, Math.max(100, parseInt(odex.helper.scrollTop() / 3)));
                    return a("html,body").animate({
                        scrollTop: 0
                    }, b), !1
                })
            }
        }

        function j() {
            if (odex.vars.webkit) {
                var b = a(".odex-nav").get(0);
                b && a(window).on("resize.webkit_fix", function() {
                    odex.helper.redraw(b)
                })
            }
            odex.vars.ios_safari && a(document).on("odex.settings.ios_fix", function(b, c, d) {
                "navbar_fixed" == c && (a(document).off("focus.ios_fix blur.ios_fix", "input,textarea,.wysiwyg-editor"), 1 == d && a(document).on("focus.ios_fix", "input,textarea,.wysiwyg-editor", function() {
                    a(window).on("scroll.ios_fix", function() {
                        var b = a("#navbar").get(0);
                        b && odex.helper.redraw(b)
                    })
                }).on("blur.ios_fix", "input,textarea,.wysiwyg-editor", function() {
                    a(window).off("scroll.ios_fix")
                }))
            }).triggerHandler("odex.settings.ios_fix", ["navbar_fixed", "fixed" == a("#navbar").css("position")])
        }

        function k() {
			
            a(document).on("hide.bs.collapse show.bs.collapse", function(b) {
                var c = b.target.getAttribute("id"),
                    d = a('a[href*="#' + c + '"]');
                0 == d.length && (d = a('a[data-target*="#' + c + '"]')), 0 != d.length && d.find(odex.vars[".icon"]).each(function() {
                    var c, d = a(this),
                        e = null,
                        f = null;
                    return (e = d.attr("data-icon-show")) ? f = d.attr("data-icon-hide") : (c = d.attr("class").match(/fa\-(.*)\-(up|down)/)) && (e = "fa-" + c[1] + "-down", f = "fa-" + c[1] + "-up"), e ? ("show" == b.type ? d.removeClass(e).addClass(f) : d.removeClass(f).addClass(e), !1) : void 0
                })
            })
        }

        function l() {
            function b() {
                var b = a(this).find("> .dropdown-menu");
                if ("fixed" == b.css("position")) {
                    var d = parseInt(a(window).width()),
                        e = d > 320 ? 60 : d > 240 ? 40 : 30,
                        f = parseInt(d) - e,
                        g = parseInt(a(window).height()) - 30,
                        h = parseInt(Math.min(f, 320));
                    b.css("width", h);
                    var i = !1,
                        j = 0,
                        k = b.find(".tab-pane.active .dropdown-content.odex-scroll");
                    0 == k.length ? k = b.find(".dropdown-content.odex-scroll") : i = !0;
                    var l = k.closest(".dropdown-menu"),
                        m = b[0].scrollHeight;
                    if (1 == k.length) {
                        var n = k.find(".scroll-content")[0];
                        n && (m = n.scrollHeight), j += l.find(".dropdown-header").outerHeight(), j += l.find(".dropdown-footer").outerHeight();
                        var o = l.closest(".tab-content");
                        0 != o.length && (j += o.siblings(".nav-tabs").eq(0).height())
                    }
                    var p = parseInt(Math.min(g, 480, m + j)),
                        q = parseInt(Math.abs((f + e - h) / 2)),
                        r = parseInt(Math.abs((g + 30 - p) / 2)),
                        s = parseInt(b.css("z-index")) || 0;
                    if (b.css({
                            height: p,
                            left: q,
                            right: "auto",
                            top: r - (i ? 3 : 1)
                        }), 1 == k.length && (odex.vars.touch ? k.ace_scroll("disable").css("max-height", p - j).addClass("overflow-scroll") : k.ace_scroll("update", {
                            size: p - j
                        }).ace_scroll("enable").ace_scroll("reset")), b.css("height", p + (i ? 7 : 2)), b.hasClass("user-menu")) {
                        b.css("height", "");
                        var t = a(this).find(".user-info");
                        1 == t.length && "fixed" == t.css("position") ? t.css({
                            left: q,
                            right: "auto",
                            top: r,
                            width: h - 2,
                            "max-width": h - 2,
                            "z-index": s + 1
                        }) : t.css({
                            left: "",
                            right: "",
                            top: "",
                            width: "",
                            "max-width": "",
                            "z-index": ""
                        })
                    }
                    a(this).closest(".navbar.navbar-fixed-top").css("z-index", s)
                } else 0 != b.length && c.call(this, b)
            }

            function c(b) {
                if (b = b || a(this).find("> .dropdown-menu"), b.length > 0 && (b.css({
                        width: "",
                        height: "",
                        left: "",
                        right: "",
                        top: ""
                    }).find(".dropdown-content").each(function() {
                        odex.vars.touch && a(this).css("max-height", "").removeClass("overflow-scroll");
                        var b = parseInt(a(this).attr("data-size") || 0) || a.fn.ace_scroll.defaults.size;
                        a(this).ace_scroll("update", {
                            size: b
                        }).ace_scroll("enable").ace_scroll("reset")
                    }), b.hasClass("user-menu"))) {
                    a(this).find(".user-info").css({
                        left: "",
                        right: "",
                        top: "",
                        width: "",
                        "max-width": "",
                        "z-index": ""
                    })
                }
                a(this).closest(".navbar").css("z-index", "")
            }
            odex.vars.old_ie || a(document).on("shown.bs.dropdown.navbar", ".odex-nav > li.dropdown-modal", function(c) {
                b.call(this);
                var d = this;
                a(window).on("resize.navbar.dropdown", function() {
                    b.call(d)
                })
            }).on("hidden.bs.dropdown.navbar", ".odex-nav > li.dropdown-modal", function(b) {
                a(window).off("resize.navbar.dropdown"), c.call(this)
            })
        }
        b(), c(), d(), e(), f(), g(), h(), i(), j(), k(), l()
    }),
    function(a, b) {
        a.unCamelCase = function(a) {
            return a.replace(/([a-z])([A-Z])/g, function(a, b, c) {
                return b + "-" + c.toLowerCase()
            })
        }, a.strToVal = function(a) {
            var b = a.match(/^(?:(true)|(false)|(null)|(\-?[\d]+(?:\.[\d]+)?)|(\[.*\]|\{.*\}))$/i),
                c = a;
            if (b)
                if (b[1]) c = !0;
                else if (b[2]) c = !1;
            else if (b[3]) c = null;
            else if (b[4]) c = parseFloat(a);
            else if (b[5]) try {
                c = JSON.parse(a)
            } catch (d) {}
            return c
        }, a.getAttrSettings = function(b, c, d) {
            if (b) {
                var e = c instanceof Array ? 1 : 2,
                    d = d ? d.replace(/([^\-])$/, "$1-") : "";
                d = "data-" + d;
                var f = {};
                for (var g in c)
                    if (c.hasOwnProperty(g)) {
                        var h, i = 1 == e ? c[g] : g,
                            j = a.unCamelCase(i.replace(/[^A-Za-z0-9]{1,}/g, "-")).toLowerCase();
                        if (!(h = b.getAttribute(d + j))) continue;
                        f[i] = a.strToVal(h)
                    }
                return f
            }
        }, a.scrollTop = function() {
            return document.scrollTop || document.documentElement.scrollTop || document.body.scrollTop
        }, a.winHeight = function() {
            return window.innerHeight || document.documentElement.clientHeight
        }, a.redraw = function(a, b) {
            if (a) {
                var c = a.style.display;
                a.style.display = "none", a.offsetHeight, b !== !0 ? a.style.display = c : setTimeout(function() {
                    a.style.display = c
                }, 10)
            }
        }
    }(odex.helper),
      
	
	function(a, b) {
        function c(c, e) {
            function f() {
                this.mobile_view = this.mobile_style < 4 && this.is_mobile_view(), this.collapsible = !this.mobile_view && this.is_collapsible(), this.minimized = !this.collapsible && this.$sidebar.hasClass(l) || 3 == this.mobile_style && this.mobile_view && this.$sidebar.hasClass(m), this.horizontal = !(this.mobile_view || this.collapsible) && this.$sidebar.hasClass(n)
            }
            var g = this;
            this.$sidebar = a(c), this.$sidebar.attr("data-sidebar", "true"), this.$sidebar.attr("id") || this.$sidebar.attr("id", "id-sidebar-" + ++d);
            var h = odex.helper.getAttrSettings(c, a.fn.ace_sidebar.defaults, "sidebar-");
            this.settings = a.extend({}, a.fn.ace_sidebar.defaults, e, h), this.minimized = !1, this.collapsible = !1, this.horizontal = !1, this.mobile_view = !1, this.vars = function() {
                return {
                    minimized: this.minimized,
                    collapsible: this.collapsible,
                    horizontal: this.horizontal,
                    mobile_view: this.mobile_view
                }
            }, this.get = function(a) {
                return this.hasOwnProperty(a) ? this[a] : void 0
            }, this.set = function(a, b) {
                this.hasOwnProperty(a) && (this[a] = b)
            }, this.ref = function() {
                return this
            };
            var i = function(c) {
                    var d, e, f = a(this).find(odex.vars[".icon"]);
                    f.length > 0 && (d = f.attr("data-icon1"), e = f.attr("data-icon2"), c !== b ? c ? f.removeClass(d).addClass(e) : f.removeClass(e).addClass(d) : f.toggleClass(d).toggleClass(e))
                },
                j = function() {
                    var b = g.$sidebar.find(".sidebar-collapse");
                    return 0 == b.length && (b = a('.sidebar-collapse[data-target="#' + (g.$sidebar.attr("id") || "") + '"]')), b = 0 != b.length ? b[0] : null
                };
            this.toggleMenu = function(a, b) {
                if (!this.collapsible) {
                    this.minimized = !this.minimized;
                    try {
                        odex.settings.sidebar_collapsed(c, this.minimized, !(a === !1 || b === !1))
                    } catch (d) {
                        this.minimized ? this.$sidebar.addClass("menu-min") : this.$sidebar.removeClass("menu-min")
                    }
                    a || (a = j()), a && i.call(a, this.minimized), odex.vars.old_ie && odex.helper.redraw(c)
                }
            }, this.collapse = function(a, b) {
                this.collapsible || (this.minimized = !1, this.toggleMenu(a, b))
            }, this.expand = function(a, b) {
                this.collapsible || (this.minimized = !0, this.toggleMenu(a, b))
            }, this.toggleResponsive = function(b) {
                if (this.mobile_view && 3 == this.mobile_style) {
                    if (this.$sidebar.hasClass("menu-min")) {
                        this.$sidebar.removeClass("menu-min");
                        var c = j();
                        c && i.call(c)
                    }
                    if (this.minimized = !this.$sidebar.hasClass("responsive-min"), this.$sidebar.toggleClass("responsive-min responsive-max"), b || (b = this.$sidebar.find(".sidebar-expand"), 0 == b.length && (b = a('.sidebar-expand[data-target="#' + (this.$sidebar.attr("id") || "") + '"]')), b = 0 != b.length ? b[0] : null), b) {
                        var d, e, f = a(b).find(odex.vars[".icon"]);
                        f.length > 0 && (d = f.attr("data-icon1"), e = f.attr("data-icon2"), f.toggleClass(d).toggleClass(e))
                    }
                    a(document).triggerHandler("settings.odex", ["sidebar_collapsed", this.minimized])
                }
            }, this.is_collapsible = function() {
                var b;
                return this.$sidebar.hasClass("navbar-collapse") && null != (b = a('.navbar-toggle[data-target="#' + (this.$sidebar.attr("id") || "") + '"]').get(0)) && b.scrollHeight > 0
            }, this.is_mobile_view = function() {
                var b;
                return null != (b = a('.menu-toggler[data-target="#' + (this.$sidebar.attr("id") || "") + '"]').get(0)) && b.scrollHeight > 0
            }, this.$sidebar.on(odex.click_event + ".odex.submenu", ".nav-list", function(b) {
                var c = this,
                    d = a(b.target).closest("a");
                if (d && 0 != d.length) {
                    var e = g.minimized && !g.collapsible;
                    if (d.hasClass("dropdown-toggle")) {
						 
                        b.preventDefault();
                        var f = d.siblings(".submenu").get(0);
                        if (!f) return !1;
                        var h = a(f),
                            i = 0,
                            j = f.parentNode.parentNode;
                        if (e && j == c || h.parent().hasClass("hover") && "absolute" == h.css("position") && !g.collapsible) return !1;
                        var k = 0 == f.scrollHeight;
                        return k && a(j).find("> .open > .submenu").each(function() {
                            this == f || a(this.parentNode).hasClass("active") || (i -= this.scrollHeight, g.hide(this, g.settings.duration, !1))
                        }), k ? (g.show(f, g.settings.duration), 0 != i && (i += f.scrollHeight)) : (g.hide(f, g.settings.duration), i -= f.scrollHeight), 0 != i && ("true" != g.$sidebar.attr("data-sidebar-scroll") || g.minimized || g.$sidebar.ace_sidebar_scroll("prehide", i)), !1
                    }
                    if ("tap" == odex.click_event && e && d.get(0).parentNode.parentNode == c) {
                        var l = d.find(".menu-text").get(0);
                        if (null != l && b.target != l && !a.contains(l, b.target)) return b.preventDefault(), !1
                    }
                    if (odex.vars.ios_safari && "false" !== d.attr("data-link")) return document.location = d.attr("href"), b.preventDefault(), !1
                }
            });
            var k = !1;
            this.show = function(b, c, d) {
                if (d = d !== !1, d && k) return !1;
                var e, f = a(b);
                if (f.trigger(e = a.Event("show.odex.submenu")), e.isDefaultPrevented()) return !1;
                d && (k = !0), c = c || this.settings.duration, f.css({
                    height: 0,
                    overflow: "hidden",
                    display: "block"
                }).removeClass("nav-hide").addClass("nav-show").parent().addClass("open"), b.scrollTop = 0, c > 0 && f.css({
                    height: b.scrollHeight,
                    "transition-property": "height",
                    "transition-duration": c / 1e3 + "s"
                });
                var g = function(b, c) {
                    b && b.stopPropagation(), f.css({
                        "transition-property": "",
                        "transition-duration": "",
                        overflow: "",
                        height: ""
                    }), c !== !1 && f.trigger(a.Event("shown.odex.submenu")), d && (k = !1)
                };
                return c > 0 && a.support.transition.end ? f.one(a.support.transition.end, g) : g(), odex.vars.android && setTimeout(function() {
                    g(null, !1), odex.helper.redraw(b)
                }, c + 20), !0
            }, this.hide = function(b, c, d) {
                if (d = d !== !1, d && k) return !1;
                var e, f = a(b);
                if (f.trigger(e = a.Event("hide.odex.submenu")), e.isDefaultPrevented()) return !1;
                d && (k = !0), c = c || this.settings.duration, f.css({
					 height: b.scrollHeight,
                    overflow: "hidden",
                    display: "block"
                }).parent().removeClass("open"), b.offsetHeight, c > 0 && f.css({
                    height: 0,
                    "transition-property": "height",
                    "transition-duration": c / 1e3 + "s"
                });
                var g = function(b, c) {
                    b && b.stopPropagation(), f.css({
                        display: "none",
                        overflow: "",
                        height: "",
                        "transition-property": "",
                        "transition-duration": ""
                    }).removeClass("nav-show").addClass("nav-hide"), c !== !1 && f.trigger(a.Event("hidden.odex.submenu")), d && (k = !1)
                };
                return c > 0 && a.support.transition.end ? f.one(a.support.transition.end, g) : g(), odex.vars.android && setTimeout(function() {
                    g(null, !1), odex.helper.redraw(b)
                }, c + 20), !0
            }, this.toggle = function(a, b) {
                if (b = b || g.settings.duration, 0 == a.scrollHeight) {
                    if (this.show(a, b)) return 1
                } else if (this.hide(a, b)) return -1;
                return 0
            };
            var l = "menu-min",
                m = "responsive-min",
                n = "h-sidebar",
                o = function() {
                    this.mobile_style = 1, this.$sidebar.hasClass("responsive") && !a('.menu-toggler[data-target="#' + this.$sidebar.attr("id") + '"]').hasClass("navbar-toggle") ? this.mobile_style = 2 : this.$sidebar.hasClass(m) ? this.mobile_style = 3 : this.$sidebar.hasClass("navbar-collapse") && (this.mobile_style = 4)
                };
            o.call(g), a(window).on("resize.sidebar.vars", function() {
                f.call(g)
            }).triggerHandler("resize.sidebar.vars")
        }
        var d = 0;
        a(document).on(odex.click_event + ".odex.menu", ".menu-toggler", function(b) {
            var c = a(this),
                d = a(c.attr("data-target"));
            if (0 != d.length) {
                b.preventDefault(), d.toggleClass("display"), c.toggleClass("display");
                var e = odex.click_event + ".odex.autohide",
                    f = "true" === d.attr("data-auto-hide");
                return c.hasClass("display") ? (f && a(document).on(e, function(b) {
                    return d.get(0) == b.target || a.contains(d.get(0), b.target) ? void b.stopPropagation() : (d.removeClass("display"), c.removeClass("display"), void a(document).off(e))
                }), "true" == d.attr("data-sidebar-scroll") && d.ace_sidebar_scroll("reset")) : f && a(document).off(e), !1
            }
        }).on(odex.click_event + ".odex.menu", ".sidebar-collapse", function(b) {
            var c = a(this).attr("data-target"),
                d = null;
            c && (d = a(c)), (null == d || 0 == d.length) && (d = a(this).closest(".sidebar")), 0 != d.length && (b.preventDefault(), d.ace_sidebar("toggleMenu", this))
        }).on(odex.click_event + ".odex.menu", ".sidebar-expand", function(b) {
            var c = a(this).attr("data-target"),
                d = null;
            if (c && (d = a(c)), (null == d || 0 == d.length) && (d = a(this).closest(".sidebar")), 0 != d.length) {
                var e = this;
                b.preventDefault(), d.ace_sidebar("toggleResponsive", this);
                var f = odex.click_event + ".odex.autohide";
                "true" === d.attr("data-auto-hide") && (d.hasClass("responsive-max") ? a(document).on(f, function(b) {
                    return d.get(0) == b.target || a.contains(d.get(0), b.target) ? void b.stopPropagation() : (d.ace_sidebar("toggleResponsive", e), void a(document).off(f))
                }) : a(document).off(f))
            }
        }), a.fn.ace_sidebar = function(d, e) {
            var f, g = this.each(function() {
                var b = a(this),
                    g = b.data("ace_sidebar"),
                    h = "object" == typeof d && d;
                g || b.data("ace_sidebar", g = new c(this, h)), "string" == typeof d && "function" == typeof g[d] && (f = e instanceof Array ? g[d].apply(g, e) : g[d](e))
            });
            return f === b ? g : f
        }, a.fn.ace_sidebar.defaults = {
            duration: 300
        }
    }(window.jQuery),
	 function(a, b) {
        function c(b, c) {
            var d = b.find(".widget-main").eq(0);
            a(window).off("resize.widget.scroll");
            var e = odex.vars.old_ie || odex.vars.touch;
            if (c) {
                var f = d.data("ace_scroll");
                f && d.data("save_scroll", {
                    size: f.size,
                    lock: f.lock,
                    lock_anyway: f.lock_anyway
                });
                var g = b.height() - b.find(".widget-header").height() - 10;
                g = parseInt(g), d.css("min-height", g), e ? (f && d.ace_scroll("disable"), d.css("max-height", g).addClass("overflow-scroll")) : (f ? d.ace_scroll("update", {
                    size: g,
                    mouseWheelLock: !0,
                    lockAnyway: !0
                }) : d.ace_scroll({
                    size: g,
                    mouseWheelLock: !0,
                    lockAnyway: !0
                }), d.ace_scroll("enable").ace_scroll("reset")), a(window).on("resize.widget.scroll", function() {
                    var a = b.height() - b.find(".widget-header").height() - 10;
                    a = parseInt(a), d.css("min-height", a), e ? d.css("max-height", a).addClass("overflow-scroll") : d.ace_scroll("update", {
                        size: a
                    }).ace_scroll("reset")
                })
            } else {
                d.css("min-height", "");
                var h = d.data("save_scroll");
                h && d.ace_scroll("update", {
                    size: h.size,
                    mouseWheelLock: h.lock,
                    lockAnyway: h.lock_anyway
                }).ace_scroll("enable").ace_scroll("reset"), e ? d.css("max-height", "").removeClass("overflow-scroll") : h || d.ace_scroll("disable")
            }
        }
        var d = function(b, d) {
            this.$box = a(b);
            this.reload = function() {
                var a = this.$box,
                    b = !1;
                "static" == a.css("position") && (b = !0, a.addClass("position-relative")), a.append('<div class="widget-box-overlay"><i class="' + odex.vars.icon + 'loading-icon fa fa-spinner fa-spin fa-2x white"></i></div>'), a.one("reloaded.odex.widget", function() {
                    a.find(".widget-box-overlay").remove(), b && a.removeClass("position-relative")
                })
            }, this.close = function() {
                var a = this.$box,
                    b = 300;
					 
                a.fadeOut(b, function() {
                    a.trigger("closed.odex.widget"), a.remove()
					
                })
            }, this.toggle = function(a, b) {
                var c = this.$box,
                    d = c.find(".widget-body").eq(0),
                    e = null,
                    f = "undefined" != typeof a ? a : c.hasClass("collapsed") ? "show" : "hide",
                    g = "show" == f ? "shown" : "hidden";
                if ("undefined" == typeof b && (b = c.find("> .widget-header a[data-action=collapse]").eq(0), 0 == b.length && (b = null)), b) {
                    e = b.find(odex.vars[".icon"]).eq(0);
                    var h, i = null,
                        j = null;
                    (i = e.attr("data-icon-show")) ? j = e.attr("data-icon-hide"): (h = e.attr("class").match(/fa\-(.*)\-(up|down)/)) && (i = "fa-" + h[1] + "-down", j = "fa-" + h[1] + "-up")
                }
                var k = 250,
                    l = 200;
                "show" == f ? (e && e.removeClass(i).addClass(j), d.hide(), c.removeClass("collapsed"), d.slideDown(k, function() { 
				$(".rangeCalender").show();
                    c.trigger(g + ".odex.widget")
					
                })) : (e && e.removeClass(j).addClass(i), d.slideUp(l, function() {
					
                    c.addClass("collapsed"), c.trigger(g + ".odex.widget")
                }))
            }, this.hide = function() {
                this.toggle("hide")
            }, this.show = function() {
                this.toggle("show")
				 
            }, this.fullscreen = function() {
                var a = this.$box.find("> .widget-header a[data-action=fullscreen]").find(odex.vars[".icon"]).eq(0),
                    b = null,
                    d = null;
                (b = a.attr("data-icon1")) ? d = a.attr("data-icon2"): (b = "fa-expand", d = "fa-compress"), this.$box.hasClass("fullscreen") ? (a.addClass(b).removeClass(d), this.$box.removeClass("fullscreen"), c(this.$box, !1)) : (a.removeClass(b).addClass(d), this.$box.addClass("fullscreen"), c(this.$box, !0)), this.$box.trigger("fullscreened.odex.widget")
            }
        };
        a.fn.widget_box = function(c, e) {
            var f, g = this.each(function() {
                var b = a(this),
                    g = b.data("widget_box"),
                    h = "object" == typeof c && c;
                g || b.data("widget_box", g = new d(this, h)), "string" == typeof c && (f = g[c](e))
            });
            return f === b ? g : f
        }, a(document).on("click.odex.widget", ".widget-header a[data-action]", function(b) {
            b.preventDefault();
            var c = a(this),
                e = c.closest(".widget-box");
            if (0 != e.length && !e.hasClass("ui-sortable-helper")) {
                var f = e.data("widget_box");
                f || e.data("widget_box", f = new d(e.get(0)));
                var g = c.data("action");
                if ("collapse" == g) {
					$(".rangeCalender").hide();
					var h, i = e.hasClass("collapsed") ? "show" : "hide";
                    if (e.trigger(h = a.Event(i + ".odex.widget")), h.isDefaultPrevented()) return;
                    f.toggle(i, c)
                } else if ("close" == g) {
					 
                    var h;
                    if (e.trigger(h = a.Event("close.odex.widget")), h.isDefaultPrevented()) return;
                    f.close()
					 
                } else if ("reload" == g) {
                    c.blur();
					 
                    var h;
                    if (e.trigger(h = a.Event("reload.odex.widget")), h.isDefaultPrevented()) return;
                    f.reload() 
					 
                } else if ("fullscreen" == g) {
                    var h;
                    if (e.trigger(h = a.Event("fullscreen.odex.widget")), h.isDefaultPrevented()) return;
                    f.fullscreen() 
					 
                } else "settings" == g && e.trigger("setting.odex.widget")
            }
        })
    }(window.jQuery)
	
    
     